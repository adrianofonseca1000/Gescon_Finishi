/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.newtonpaiva.gc.ui.curso;

import br.newtonpaiva.modelo.Curso;
import java.sql.SQLException;
import java.util.List;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Guilherme
 */
public class TodosCursos extends javax.swing.JDialog {

    private final ResourceBundle bundle = ResourceBundle.getBundle("MessageBundle");
    private Curso cursoSelecionado;

    /**
     * Creates new form TodosCursos
     *
     * @param parent
     * @param modal
     */
    public TodosCursos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        /*
        * posiciona a tela no centro da tela
         */
        setLocationRelativeTo(parent);
        /*
        * Inicia a tabela
         */
        atualizarTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tabCursos = new javax.swing.JTable();
        btnNovo = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        imgLogo = new javax.swing.JLabel();
        panBuscar = new javax.swing.JPanel();
        edtNome = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Todos cursos");
        setResizable(false);

        tabCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabCursos);

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        panBuscar.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisar"));

        lblNome.setText("Nome");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panBuscarLayout = new javax.swing.GroupLayout(panBuscar);
        panBuscar.setLayout(panBuscarLayout);
        panBuscarLayout.setHorizontalGroup(
            panBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panBuscarLayout.createSequentialGroup()
                .addGroup(panBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panBuscarLayout.createSequentialGroup()
                        .addGroup(panBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panBuscarLayout.createSequentialGroup()
                                .addGap(274, 274, 274)
                                .addComponent(btnBuscar))
                            .addGroup(panBuscarLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblNome)))
                        .addGap(0, 267, Short.MAX_VALUE))
                    .addComponent(edtNome, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        panBuscarLayout.setVerticalGroup(
            panBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panBuscarLayout.createSequentialGroup()
                .addComponent(lblNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(btnBuscar))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(imgLogo)
                .addGap(253, 253, 253))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAlterar)
                        .addGap(220, 220, 220)
                        .addComponent(btnExcluir))
                    .addComponent(jScrollPane2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(imgLogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo)
                    .addComponent(btnAlterar)
                    .addComponent(btnExcluir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        /*
        * Chama a tela de Contrato com o modal
         */
        TelaCurso Tela = new TelaCurso(null, true);
        /*
        * Muda o título da tela de cursos
         */
        Tela.setTitle(bundle.getString("curso.incluir"));
        /*
        * Tela de Contrato visivel
         */
        Tela.setVisible(true);
        /*
        * Atualiza a tabela
         */
        atualizarTabela();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        /*
        * Atualiza a tabela
         */
        atualizarTabela();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        /*
        * Retorna o ID do curso selecionado
         */
        int retorno = LinhaSelecionadas();
        /*
        * Sem linha selecionada
         */
        if (retorno == -1) {
            JOptionPane.showMessageDialog(null, bundle.getString("erro.grade"));
            return;
            /*
            * Linha selecionada
             */
        } else {
            /*
            * Chama a tela de Cursos com o modal
             */
            TelaCurso Tela = new TelaCurso(null, true);
            /*
            * Muda o título da tela de cursos
             */
            Tela.setTitle(bundle.getString("curso.alterar"));

            try {
                /*
                * Seta a classe para o curso selcionado
                 */
                cursoSelecionado = Curso.buscarPorId(retorno);
                /*
                * Curso é nulo
                 */
                if (cursoSelecionado == null) {
                    JOptionPane.showMessageDialog(null, bundle.getString("curso.nao.existe"));
                    return;
                } else {
                    /*
                    * Seta o curso na tela que serpa aberta
                     */
                    Tela.exibirDados(cursoSelecionado);
                    /*
                    * Abre a tela
                     */
                    Tela.setVisible(true);
                    /*
                    * Atualiza a tabela
                     */
                    atualizarTabela();
                }
            } catch (SQLException ex) {
                Logger.getLogger(TodosCursos.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, bundle.getString("erro.conexao.banco"));
            }

        }

    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        /*
        * Retorna o ID do curso selecionado
         */
        int retorno = LinhaSelecionadas();
        /*
        * Linha selecionada >0
         */
        if (retorno == -1) {
            JOptionPane.showMessageDialog(null, bundle.getString("erro.grade"));
            return;
        } else {
            String message = bundle.getString("curso.pergunta.exclusao");
            String title = "Confirmação";
            //Exibe caixa de dialogo (veja figura) solicitando confirmação ou não. 
            //Se o usuário clicar em "Sim" retorna 0 pra variavel reply, se informado não retorna 1
            int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
            if (reply != JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(null, bundle.getString("curso.nao.excluido"));
                return;
            }
            /*
            * Chama a classe do curso
             */
            Curso cu = new Curso();

            try {
                /*
                * Verifica se o curso existe
                 */
                cu = Curso.buscarPorId(retorno);
                if (cu == null) {
                    JOptionPane.showMessageDialog(null, bundle.getString("curso.nao.existe"));
                    return;
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, bundle.getString("erro.conexao.banco"));
                Logger.getLogger(TodosCursos.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                cu.carregarAlunos();
                if (cu.getTotalAluno() > 0) {
                    JOptionPane.showMessageDialog(null, bundle.getString("curso.aluno.existente.exclusao"));
                    return;
                }

            } catch (SQLException ex) {
                Logger.getLogger(TodosCursos.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, bundle.getString("erro.conexao.banco"));
            }

            try {
                cu.carregarConvenios();
                if (cu.getTotalConvenio() > 0) {
                    JOptionPane.showMessageDialog(null, bundle.getString("curso.convenio.existente.exclusao"));
                    return;
                }

            } catch (SQLException ex) {
                Logger.getLogger(TodosCursos.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, bundle.getString("erro.conexao.banco"));
            }

            try {
                /*
                * Exclui o curso
                 */
                cu.excluir(retorno);
                JOptionPane.showMessageDialog(null, bundle.getString("curso.excluido"));
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, bundle.getString("erro.conexao.banco"));
                Logger.getLogger(TodosCursos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        /*
        * Atualiza a tabela
         */
        atualizarTabela();
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TodosCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            TodosCursos dialog = new TodosCursos(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JTextField edtNome;
    private javax.swing.JLabel imgLogo;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblNome;
    private javax.swing.JPanel panBuscar;
    private javax.swing.JTable tabCursos;
    // End of variables declaration//GEN-END:variables

    private void atualizarTabela() {

        try {

            DefaultTableModel tableModel = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            tableModel.addColumn(bundle.getString("geral.id"));
            tableModel.addColumn(bundle.getString("geral.nome"));
            tableModel.setRowCount(0);

            String Nome;

            if (edtNome.getText().equals("")) {
                Nome = "";
            } else {
                Nome = edtNome.getText();
            }

            List<Curso> lista = Curso.buscarPorNome(Nome);

            lista.forEach(cursos -> {
                Object[] row = {cursos.getId(), cursos.getCurso()};
                tableModel.addRow(row);
            });

            tabCursos.setModel(tableModel);

        } catch (SQLException ex) {
            Logger.getLogger(TodosCursos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, bundle.getString("erro.conexao.banco"));
        }

    }

    private int LinhaSelecionadas() {
        /*
        * Limpa o componente de busca
         */
        edtNome.setText("");
        /*
        * Busca a linha selecionada
         */
        Integer linhaSelecionada = tabCursos.getSelectedRow();
        if (linhaSelecionada >= 0) {
            /*
            * retorna o ID da linha selecionas
             */
            return (int) tabCursos.getValueAt(linhaSelecionada, 0);
        } else {
            return -1;
        }
    }

}
