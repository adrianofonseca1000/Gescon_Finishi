/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.newtonpaiva.gc.ui.aluno;

import br.newtonpaiva.gc.ui.contrato.TelaContrato;
import br.newtonpaiva.modelo.Aluno;
import br.newtonpaiva.modelo.Curso;
import br.newtonpaiva.modelo.excessoes.AlunoInvalidoException;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.ResourceBundle;
import javax.swing.JFrame;

/**
 *
 * @author Adriano
 */
public class TodosAlunos extends javax.swing.JDialog {

    private Aluno alunoSelecionado;
    private String GERAL_S;
    private String GERAL_N;
    private String GERAL_NAO;
    private String GERAL_SIM;
    private String GERAL_SELECIONE_UM;
    
    /**
     * Creates new form TodosAlunos
     * @param parent
     * @param modal
     */
    public TodosAlunos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        /*
        * posiciona a tela no centro da tela
         */
        setLocationRelativeTo(parent);
        /*
        * Inicia a tabela
         */
        atualizarTabela();
        /*
        * Inicia o componente de cursos
         */
        CursosComponente();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imgLogo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabAlunos = new javax.swing.JTable();
        btnNovo = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        panBuscar = new javax.swing.JPanel();
        edtRa = new javax.swing.JTextField();
        edtNome = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();
        edtCpf = new javax.swing.JFormattedTextField();
        cbbDeficiente = new javax.swing.JComboBox<>();
        lblDeficiente = new javax.swing.JLabel();
        lblCpf = new javax.swing.JLabel();
        lblRa = new javax.swing.JLabel();
        cbbCurso = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Todos Alunos");
        setIconImage(null);
        setIconImages(null);
        setResizable(false);

        tabAlunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código do Aluno", "Nome do Curso", "RA", "Nome do Aluno", "CPF", "Email"
            }
        ));
        jScrollPane2.setViewportView(tabAlunos);

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        panBuscar.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisar"));

        lblNome.setText("Nome");

        try {
            edtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        cbbDeficiente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um....", "Sim", "Não" }));

        lblDeficiente.setText("Deficiente");

        lblCpf.setText("CPF");

        lblRa.setText("RA");

        cbbCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleciona um...", "SISTEMAS DE INFORMAÇÃO", "ENGENHARIA QUIMICA", "ENGENHARIA DE PRODUÇÃO", "ENGENHARIA DE CONTROLE E AUTOMAÇÃO", "ENGENHARIA ELETRICA", "ENGENHARIA AMBIENTAL", "ARQUITETURA E URBANISMO", "ENGENHARIA MECANICA", "ENGENHARIA CIVIL", "MEDICINA VETERINARIA", "ENFERMAGEM", "PSICOLOGIA", "FARMACIA", "FISIOTERAPIA", "ODONTOLOGIA", "CIENCIAS BIOLOGICAS", "ESTETICA E COSMETICA", "RELACOES PUBLICAS", "PUBLICIDADE E PROPAGANDA", "JORNALISMO", "CIENCIAS CONTABEIS", "ADMINISTRAÇÃO", "DIREITO" }));

        jLabel1.setText("Cursos");

        javax.swing.GroupLayout panBuscarLayout = new javax.swing.GroupLayout(panBuscar);
        panBuscar.setLayout(panBuscarLayout);
        panBuscarLayout.setHorizontalGroup(
            panBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(edtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbbCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(edtRa, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panBuscarLayout.createSequentialGroup()
                        .addComponent(lblCpf)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(edtCpf, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbbDeficiente, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDeficiente))
                .addContainerGap())
        );
        panBuscarLayout.setVerticalGroup(
            panBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panBuscarLayout.createSequentialGroup()
                .addGroup(panBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome)
                    .addComponent(lblDeficiente)
                    .addComponent(lblCpf)
                    .addComponent(lblRa)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edtRa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbDeficiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(377, 377, 377)
                .addComponent(imgLogo)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnNovo)
                        .addGap(150, 150, 150)
                        .addComponent(btnBuscar)
                        .addGap(154, 154, 154)
                        .addComponent(btnAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLimpar)
                        .addGap(181, 181, 181)
                        .addComponent(btnExcluir))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(imgLogo)
                .addGap(76, 76, 76)
                .addComponent(panBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo)
                    .addComponent(btnExcluir)
                    .addComponent(btnAlterar)
                    .addComponent(btnBuscar)
                    .addComponent(btnLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        /*
        * Chama a tela de Contrato com o modal
         */
        TelaAluno Tela = new TelaAluno(null, true);
        Tela.setTitle("Novo aluno");
        /*
        * Tela de Aluno visivel
         */
        Tela.setVisible(true);

        atualizarTabela();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        int retorno = LinhaSelecionadas();

        if (retorno == -1) {
            JOptionPane.showMessageDialog(null, "Nenhuma linha selecionada");
            return;
        } else {
            try {
                alunoSelecionado = Aluno.buscarPorId(retorno);

                /*
                * Chama a tela de Contrato com o modal
                 */
                TelaAluno Tela = new TelaAluno(null, true);

                Tela.setTitle("Alteração de Aluno");

                Tela.exibirDados(alunoSelecionado);

                /*
                * Tela de Aluno visivel
                 */
                Tela.setVisible(true);

                atualizarTabela();
            } catch (SQLException ex) {
                Logger.getLogger(TodosAlunos.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private final ResourceBundle bundle = ResourceBundle.getBundle("MessageBundle");
    
    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int retorno = LinhaSelecionadas();
        
        
        if (retorno == -1) {
            JOptionPane.showMessageDialog(null, "Favor selecionar uma linha.");
            return;
        } else {
            String message = "Deseja realmente excluir este aluno ?";
            String title = "Confirmação";
            //Exibe caixa de dialogo (veja figura) solicitando confirmação ou não. 
            //Se o usuário clicar em "Sim" retorna 0 pra variavel reply, se informado não retorna 1
            int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
            if (reply != JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(null, bundle.getString("aluno.nao.excluido"));
                return;
            }

            Aluno a = null;
            
            try {
                a = Aluno.buscarPorId(retorno);
                
                if (a == null) {
                    JOptionPane.showMessageDialog(null, bundle.getString("aluno.nao.existe"));
                    return;
                }
                
                a.carregarContratos();
                
                if (!a.getListaContratos().isEmpty()) {
                    JOptionPane.showMessageDialog(null, bundle.getString("aluno.contrato.existente.exclusao"));
                    return;
                }
                
                Aluno.excluir(a.getId());
                JOptionPane.showMessageDialog(null, bundle.getString("aluno.excluido"));
                
                atualizarTabela();
            } catch (SQLException ex) {
                Logger.getLogger(TodosAlunos.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (AlunoInvalidoException ex) {
                Logger.getLogger(TodosAlunos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void Limpar() {
        //Limpa os campos
        edtNome.setText("");
        cbbCurso.setSelectedIndex(0);
        edtRa.setText("");
        edtCpf.setText("");
        cbbDeficiente.setSelectedIndex(0);
    }
    
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        //TodosAlunos tela = new TodosAlunos (
           //(JFrame) this.getParent(), true);
        
        //Atualiza a grade
        
        atualizarTabela();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
        Limpar();
    }//GEN-LAST:event_btnLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TodosAlunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            TodosAlunos dialog = new TodosAlunos(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JComboBox<String> cbbCurso;
    private javax.swing.JComboBox<String> cbbDeficiente;
    private javax.swing.JFormattedTextField edtCpf;
    private javax.swing.JTextField edtNome;
    private javax.swing.JTextField edtRa;
    private javax.swing.JLabel imgLogo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblDeficiente;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblRa;
    private javax.swing.JPanel panBuscar;
    private javax.swing.JTable tabAlunos;
    // End of variables declaration//GEN-END:variables

    private void atualizarTabela() {
        try {
            DefaultTableModel tableModel = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            tableModel.addColumn("Código Aluno");
            tableModel.addColumn("Nome do Curso");
            tableModel.addColumn("RA");
            tableModel.addColumn("Nome do Aluno");
            tableModel.addColumn("CPF");
            tableModel.addColumn("Email");
            //tableModel.addColumn("Deficiente");
            tableModel.setRowCount(0);

            String Nome;

            if (edtNome.getText().equals("")) {
                Nome = "";
            } else {
                Nome = edtNome.getText();
            }

            String Ra;

            if (edtRa.getText().equals("")) {
                Ra = "";
            } else {
                Ra = edtRa.getText();
            }

            String CPF;

            if (edtCpf.getText().equals("   .   .   -  ")) {
                CPF = "";
            } else {
                CPF = edtCpf.getText();
            }

            String Cursos = "";
            if (cbbCurso.getSelectedIndex() > 0) {
                Cursos = cbbCurso.getSelectedItem().toString();
            }

            String Deficiente = "";
            if (cbbDeficiente.getSelectedIndex() == 1) {
                Deficiente = GERAL_S;
            } else if (cbbDeficiente.getSelectedIndex() == 2) {
                Deficiente = GERAL_N;
            }

            
            // TODO Tarley enviar e-mail para o Tarley solicitando a implementação deste método
            //List<Aluno> lista = Aluno.buscarTodos(Nome, Cursos, Ra, CPF, Deficiente);
            List<Aluno> lista = Aluno.buscarTodos(Nome, Cursos, Ra, CPF, Deficiente);

            lista.forEach(Alunos -> {

                String deficienteGrade;

                if (Alunos.getDeficiente().equals("S")) {
                    deficienteGrade = GERAL_SIM;
                } else {
                    deficienteGrade = GERAL_NAO;
                }
                Object[] row = {Alunos.getId(), Alunos.getCurso().getCurso(), Alunos.getRa(), Alunos.getNome(),
                    Alunos.getCpf(), Alunos.getEmail(), deficienteGrade
                };
                tableModel.addRow(row);
            });

            tabAlunos.setModel(tableModel);
        } catch (SQLException ex) {
            Logger.getLogger(TodosAlunos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }

    private int LinhaSelecionadas() {
        Integer linhaSelecionada = tabAlunos.getSelectedRow();
        if (linhaSelecionada >= 0) {
            return (int) tabAlunos.getValueAt(linhaSelecionada, 0);
        } else {
            return -1;
        }
    }

    private void CursosComponente() {
        try {
            List<Curso> lista = Curso.buscarTodos();
            // Limpa o componente
            cbbCurso.removeAllItems();
            cbbCurso.addItem(GERAL_SELECIONE_UM);
            lista.forEach(emp -> {
                cbbCurso.addItem(emp.getCurso());
            });

        } catch (SQLException ex) {
            Logger.getLogger(TelaContrato.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }

}
